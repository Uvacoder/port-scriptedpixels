/*
	All font SIZES controlled in here

	Thanks to : https://snook.ca/archives/html_and_css/font-size-with-rem

	Sizing with rem

	CSS3 introduces a few new units, including the rem unit, which stands for "root em". If this hasn't put you to sleep yet, then let's look at how rem works.

	The em unit is relative to the font-size of the parent, which causes the compounding issue. The rem unit is relative to the root—or the html—element. That means that we can define a single font size on the html element and define all rem units to be a percentage of that.

	html { font-size: 62.5%; }
	body { font-size: 1.4rem; } =14px
	h1   { font-size: 2.4rem; } =24px

	I'm defining a base font-size of 62.5% to have the convenience of sizing rems in a way that is similar to using px.

	But what pitiful browser support do we have to worry about?

	You might be surprised to find that browser support is surprisingly decent: Safari 5, Chrome, Firefox 3.6+, and even Internet Explorer 9 have support for this. The nice part is that IE9 supports resizing text when defined using rems. (Alas, poor Opera (up to 11.10, at least) hasn't implemented rem units yet.)

	What do we do for browsers that don't support rem units? We can specify the fall-back using px, if you don't mind users of older versions of Internet Explorer still being unable to resize the text (well, there's still page zoom in IE7 and IE8). To do so, we specify the font-size using px units first and then define it again using rem units.

	html { font-size: 62.5%; }
	body { font-size: 14px; font-size: 1.4rem; } =14px
	h1   { font-size: 24px; font-size: 2.4rem; } =24px

	And voila, we now have consistent and predictable sizing in all browsers, and resizable text in the current versions of all major browsers.

*/
/* CUSTOM FONT - CODE LIGHT */
@font-face {
  font-family: 'CodeLightRegular';
  src: url('../font/code_light-webfont.eot');
  src: url('../font/code_light-webfont.eot?#iefix') format('embedded-opentype'),
      url('../font/code_light-webfont.woff') format('woff'),
      url('../font/code_light-webfont.ttf') format('truetype'),
      url('../font/code_light-webfont.svg#CodeLightRegular') format('svg');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'CodeBoldRegular';
  src: url('../font/code_bold-webfont.eot');
  src: url('../font/code_bold-webfont.eot?#iefix') format('embedded-opentype'),
      url('../font/code_bold-webfont.woff') format('woff'),
      url('../font/code_bold-webfont.ttf') format('truetype'),
      url('../font/code_bold-webfont.svg#CodeBoldRegular') format('svg');
  font-weight: normal;
  font-style: normal;
}

$customFontFamily: 'CodeBoldRegular';
$header-family: 'CodeLightRegular';
$header-weight: 700;

nav {
  font-family: $customFontFamily;
}

p {
  @apply mb-6 text-lg break-words;
}

h1, h2, h3, h4, h5 {
  -webkit-font-smoothing:antialiased;
  text-rendering: optimizeLegibility;
  font-family: $header-family;
	-webkit-text-stroke: 0.40px;
	letter-spacing: 3px;
	margin: 1em 0 2em;
}

a {

  &[target="_blank"] {
    display: inline-block;
    padding-right: 20px;
    position: relative;
    width: 100%;
  }

  .nuxt-content &[target="_blank"] {
    width: auto;
  }

  &[target="_blank"]:after {
    text-decoration: none;
    position: absolute;
    margin: 0 0 0 5px;
    content: '\29C9';
    line-height: 1.2;
    right: 0;
    top: 3px;
  }
}

.title {

	// adds a transparent bottom border
	&.title--with-bottom-border {
		border-bottom: 2px solid transparent;

		// adds color to border
		&.title--border-danger {
			border-color: map-get($brandColours, 'danger');
		}

		&.title--border-link {
			border-color: map-get($brandColours, 'link');
		}

		&.title--border-success {
			border-color: map-get($brandColours, 'success');
		}
	}
}
